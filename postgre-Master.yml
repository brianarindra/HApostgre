---
- name: Setup PostgreSQL Master
  hosts: master
  become: yes
  vars:
    replication_user: replicator
    replication_password: "passwordku"
    postgres_user: postgres
    postgres_password: "prodpassword"
    slave_ip: 192.168.200.0/24   # Ganti sesuai IP slave
    client_network: 0.0.0.0/0  # jaringan client


    pgbouncer_listen_port: 6432
    pgbouncer_listen_addr: "0.0.0.0"

    pgbouncer_auth_type: "md5"
    pgbouncer_pool_mode: "session"
    pgbouncer_default_pool_size: 20

    pgbouncer_users:
      - { name: "postgres", password: "prodpassword" }
      - { name: "app_user", password: "abc123" }

    pgbouncer_databases:
      - { name: "postgres", host: "127.0.0.1", port: 5432 }
      - { name: "appdb", host: "127.0.0.1", port: 5432 }


  tasks:
    - name: Install PostgreSQL 16 and psycopg2
      apt:
        name:
          - postgresql-16
          - python3-psycopg2
          - pgbouncer
          - python3-passlib
        state: present
        update_cache: yes

    - name: Configure postgresql.conf for replication
      lineinfile:
        path: /etc/postgresql/16/main/postgresql.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - { regexp: '^#?wal_level', line: 'wal_level = replica' }
        - { regexp: '^#?archive_mode', line: 'archive_mode = on' }
        - { regexp: '^#?archive_command', line: "archive_command = 'cp %p /var/lib/postgresql/wal_archive/%f'" }
        - { regexp: '^#?max_wal_senders', line: 'max_wal_senders = 10' }
        - { regexp: '^#?wal_keep_size', line: 'wal_keep_size = 256MB' }
        - { regexp: '^#?hot_standby', line: 'hot_standby = on' }
        - { regexp: '^#?listen_addresses', line: "listen_addresses = '*'" }
      notify: Restart PostgreSQL Master

    - name: Configure pg_hba.conf for replication and clients
      blockinfile:
        path: /etc/postgresql/16/main/pg_hba.conf
        block: |
          # Allow replication from slave
          host  replication {{ replication_user }} {{ slave_ip }} md5
      notify: Restart PostgreSQL Master

    - name: Wait for PostgreSQL socket to be ready
      wait_for:
        path: /var/run/postgresql/.s.PGSQL.5432
        state: present
        timeout: 30

    - name: Set password for default postgres user
      become_user: postgres
      community.postgresql.postgresql_user:
        name: "{{ postgres_user }}"
        password: "{{ postgres_password }}"
        role_attr_flags: "SUPERUSER,CREATEDB,CREATEROLE,LOGIN"
        login_unix_socket: /var/run/postgresql

    - name: Create replication user
      become_user: postgres
      postgresql_user:
        name: "{{ replication_user }}"
        password: "{{ replication_password }}"
        role_attr_flags: "REPLICATION,LOGIN"
      

    - name: Generate pgbouncer.ini
      copy:
        dest: /etc/pgbouncer/pgbouncer.ini
        content: |
          [databases]
          {% for db in pgbouncer_databases %}
          {{ db.name }} = host={{ db.host }} port={{ db.port }} auth_user=postgres
          {% endfor %}

          [pgbouncer]
          listen_addr = {{ pgbouncer_listen_addr }}
          listen_port = {{ pgbouncer_listen_port }}
          auth_type = {{ pgbouncer_auth_type }}
          auth_file = /etc/pgbouncer/userlist.txt
          pool_mode = {{ pgbouncer_pool_mode }}
          max_client_conn = 100
          default_pool_size = {{ pgbouncer_default_pool_size }}
          log_connections = 1
          log_disconnections = 1
      notify: restart package

    - name: Generate userlist.txt
      copy:
        dest: /etc/pgbouncer/userlist.txt
        content: |
          {% for u in pgbouncer_users %}
          "{{ u.name }}" "{{ u.password }}"
          {% endfor %}
      notify: restart package


  handlers:
    - name: Restart PostgreSQL Master
      service:
        name: postgresql
        state: restarted

    - name: restart package
      service:
        name: pgbouncer
        state: restarted