---
# Playbook 2: PostgreSQL 16 Slave + PgBouncer (Ubuntu)

- name: Deploy PostgreSQL 16 Slave (replica)
  hosts: slave
  vars:
    postgres_version: 16
    postgres_port: 5432
    postgres_master_host: "{{ ip_master }}" #gunakan external variabel untuk ini
    replication_user: repl_user
    replication_password: "{{ vault_repl_password | default('changeme_repl') }}"

    pgbouncer_listen_addr: '0.0.0.0'
    pgbouncer_listen_port: 6432
    pgbouncer_pool_mode: transaction
    pgbouncer_default_pool_size: 20
    pgbouncer_max_client_conn: 1000
    app_db_user: app_user
    app_db_password: "{{ vault_app_db_password | default('changeme_app') }}"
    postgres_db_name: appdb

  tasks:
    - name: Ensure postgres user exists
      ansible.builtin.user:
        name: postgres
        shell: /bin/false
        home: /var/lib/postgresql
        system: yes
        create_home: yes
        
    - name: Install PostgreSQL 16 and PgBouncer
      apt:
        name:
          - postgresql-{{ postgres_version }}
          - postgresql-contrib
          - pgbouncer
        state: present
        update_cache: yes

    - name: Stop PostgreSQL before base backup
      service:
        name: postgresql
        state: stopped

    - name: Clear old data directory
      file:
        path: "/var/lib/postgresql/{{ postgres_version }}/main"
        state: absent

    - name: Run pg_basebackup from master
      command: >
        pg_basebackup -h {{ postgres_master_host }} -D /var/lib/postgresql/{{ postgres_version }}/main -U {{ replication_user }} -Fp -Xs -P -R
      become_user: postgres
      environment:
        PGPASSWORD: "{{ replication_password }}"

    - name: Configure postgresql.conf for replica
      lineinfile:
        path: "/etc/postgresql/{{ postgres_version }}/main/postgresql.conf"
        regexp: '^#?{{ item.key }}\s*='
        line: "{{ item.key }} = {{ item.value }}"
        backrefs: yes
      loop:
        - { key: 'hot_standby', value: 'on' }
      notify: Restart postgresql

    # --- PgBouncer configuration ---
    - name: Ensure pgbouncer config directory exists
      file:
        path: /etc/pgbouncer
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Create pgbouncer.ini
      copy:
        dest: /etc/pgbouncer/pgbouncer.ini
        owner: root
        group: root
        mode: '0644'
        content: |
          [databases]
          {{ postgres_db_name }} = host=127.0.0.1 port={{ postgres_port }} dbname={{ postgres_db_name }} user={{ app_db_user }}

          [pgbouncer]
          listen_addr = {{ pgbouncer_listen_addr }}
          listen_port = {{ pgbouncer_listen_port }}
          auth_type = md5
          auth_file = /etc/pgbouncer/userlist.txt
          admin_users = postgres
          pool_mode = {{ pgbouncer_pool_mode }}
          default_pool_size = {{ pgbouncer_default_pool_size }}
          max_client_conn = {{ pgbouncer_max_client_conn }}
      notify: Restart pgbouncer

    - name: Generate userlist.txt for PgBouncer
      shell: |
        set -e
        python3 - <<'PY'
        import hashlib
        user = "{{ app_db_user }}"
        password = "{{ app_db_password }}"
        md5 = hashlib.md5((password + user).encode()).hexdigest()
        print('"%s" "md5%s"' % (user, md5))
        PY
      register: pgb_userlist
      changed_when: pgb_userlist.stdout != ''

    - name: Write PgBouncer userlist
      copy:
        dest: /etc/pgbouncer/userlist.txt
        content: "{{ pgb_userlist.stdout }}\n"
        owner: root
        group: root
        mode: '0600'
      notify: Restart pgbouncer

    - name: Ensure PostgreSQL is enabled and started
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Ensure PgBouncer is enabled and started
      service:
        name: pgbouncer
        state: started
        enabled: yes

  handlers:
    - name: Restart postgresql
      service:
        name: postgresql
        state: restarted

    - name: Restart pgbouncer
      service:
        name: pgbouncer
        state: restarted
